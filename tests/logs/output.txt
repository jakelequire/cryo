PS C:\Programming\apps\cryo> .\src\bin\main.exe .\tests\cryo_src\var_tests\3.boolean.cryo
{lexer} -------------- <Input Source Code> --------------


{lexer} Lexer initialized.
Start: 000002A50B0DC000
Current: 000002A50B0DC000

Source:
-------

const exampleBool: boolean = true;
const anotherBool: boolean = false;


{lexer} -------------------- <END> ----------------------


[DEBUG] Lexer initialized

[Parser] Parsing program
[AST] Creating Program Node....
[AST] Creating node: 0
[AST] Initialized node: 0
[AST] Program Node Created
[Lexer] Processing Token | Type: 468389579, Line: 0, Column: 0
[Lexer] Created token: const (Type: 58, Line: 2, Column: 2)
[Parser] Parsing statement...
[Parser] Parsing variable declaration.
[Parser] Entering parseVarDeclaration
[Lexer] Processing Token | Type: 58, Line: 2, Column: 2
[Lexer] Keyword Identified: e
[Lexer] Created token: e (Type: 1, Line: 2, Column: 4)
[Lexer] Created token: exampleBool (Type: 1, Line: 2, Column: 14)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 14
[Lexer] Created token: : (Type: 116, Line: 2, Column: 15)
[Lexer] Processing Token | Type: 116, Line: 2, Column: 15
[Lexer] Created token: b (Type: 1, Line: 2, Column: 17)
[Lexer] Created token: boolean (Type: 1, Line: 2, Column: 23)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 23
[Lexer] Created token: = (Type: 6, Line: 2, Column: 25)
[Lexer] Processing Token | Type: 6, Line: 2, Column: 25
[Lexer] Created token: true (Type: 21, Line: 2, Column: 27)
[Parser] Entering parsePrimaryExpression. Current token type: 21
[Lexer] Processing Token | Type: 21, Line: 2, Column: 27
[Lexer] Created token: ; (Type: 130, Line: 2, Column: 28)
[AST] Creating node: 20
[AST] Initialized node: 20
[AST] Boolean Literal Node Created: true
[Parser] Created Boolean Node: 1
[Lexer] Processing Token | Type: 130, Line: 2, Column: 28
[Lexer] Created token: const (Type: 58, Line: 3, Column: 2)
[Parser] Created Variable Declaration Node: exampleBool
[Parser] Variable Declaration Node Type: 2
[Parser] Parsing statement...
[Parser] Parsing variable declaration.
[Parser] Entering parseVarDeclaration
[Lexer] Processing Token | Type: 58, Line: 3, Column: 2
[Lexer] Created token: a (Type: 1, Line: 3, Column: 4)
[Lexer] Created token: anotherBool (Type: 1, Line: 3, Column: 14)
[Lexer] Processing Token | Type: 1, Line: 3, Column: 14
[Lexer] Created token: : (Type: 116, Line: 3, Column: 15)
[Lexer] Created token: b (Type: 1, Line: 3, Column: 17)
[Lexer] Created token: boolean (Type: 1, Line: 3, Column: 23)
[Lexer] Processing Token | Type: 1, Line: 3, Column: 23
[Lexer] Created token: = (Type: 6, Line: 3, Column: 25)
[Lexer] Processing Token | Type: 6, Line: 3, Column: 25
[Lexer] Created token: false (Type: 21, Line: 3, Column: 27)
[Parser] Entering parsePrimaryExpression. Current token type: 21
[Lexer] Processing Token | Type: 21, Line: 3, Column: 27
[Lexer] Created token: ; (Type: 130, Line: 3, Column: 28)
[AST] Creating node: 20
[AST] Initialized node: 20
[AST] Boolean Literal Node Created: false
[Parser] Created Boolean Node: 0
[Parser] Created Variable Declaration Node: anotherBool
[Parser] Variable Declaration Node Type: 2

>===------- AST Tree -------===<
Program:
  Variable Declaration: exampleBool
    Boolean Literal: true
  Variable Declaration: anotherBool
    Boolean Literal: false

>===------- End Tree ------===<
[AST] Freeing program statement: 2
[AST] Freeing Variable Declaration Node
[AST] Freeing node: 2
[AST] Freeing Boolean Literal Node
[AST] Freeing node: 20
[AST] Freeing node: 2
[AST] Freeing program statement: 2
[AST] Freeing Variable Declaration Node
[AST] Freeing node: 2
[AST] Freeing Boolean Literal Node
[AST] Freeing node: 20
[AST] Freeing node: 2
[AST] Freeing program statements
[AST] Freeing node: 0
[DEBUG] Program parsed
PS C:\Programming\apps\cryo> .\src\bin\main.exe .\tests\cryo_src\var_tests\2.string.cryo
{lexer} -------------- <Input Source Code> --------------


{lexer} Lexer initialized.
Start: 0000020E1288E870
Current: 0000020E1288E870

Source:
-------

const exampleStr: string = "Hello, world!";



{lexer} -------------------- <END> ----------------------


[DEBUG] Lexer initialized

[Parser] Parsing program
[AST] Creating Program Node....
[AST] Creating node: 0
[AST] Initialized node: 0
[AST] Program Node Created
[Lexer] Processing Token | Type: 468389579, Line: 0, Column: 0
[Lexer] Created token: const (Type: 58, Line: 2, Column: 2)
[Parser] Parsing statement...
[Parser] Entering parseVarDeclaration
[Lexer] Processing Token | Type: 58, Line: 2, Column: 2
[Lexer] Keyword Identified: e
[Lexer] Created token: e (Type: 1, Line: 2, Column: 4)
[Lexer] Created token: exampleStr (Type: 1, Line: 2, Column: 13)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 13
[Lexer] Created token: : (Type: 116, Line: 2, Column: 14)
[Lexer] Processing Token | Type: 116, Line: 2, Column: 14
[Lexer] Created token: s (Type: 1, Line: 2, Column: 16)
[Lexer] Created token: string (Type: 1, Line: 2, Column: 21)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 21
[Lexer] Created token: = (Type: 6, Line: 2, Column: 23)
[Lexer] Processing Token | Type: 6, Line: 2, Column: 23
[Lexer] Created token: "Hello, world!" (Type: 20, Line: 2, Column: 39)
[Parser] Entering parsePrimaryExpression. Current token type: 20
[Lexer] Processing Token | Type: 20, Line: 2, Column: 39
[Lexer] Created token: ; (Type: 130, Line: 2, Column: 40)
[AST] Creating node: 19
[AST] Initialized node: 19
[Parser] Created String Node: Hello, world!
[Lexer] Created token:  (Type: 0, Line: 3, Column: 1)
[Parser] Created Variable Declaration Node: exampleStr
[Parser] Variable Declaration Node Type: 2

>===------- AST Tree -------===<
Program:
  Variable Declaration: exampleStr
    String Literal: 'Hello, world!'

>===------- End Tree ------===<
[AST] Freeing program statement: 2
[AST] Freeing Variable Declaration Node
[AST] Freeing node: 2
[AST] Freeing String Literal Node
[AST] Freeing node: 19
[AST] Freeing node: 2
[AST] Freeing program statements
[AST] Freeing node: 0
[DEBUG] Program parsed
PS C:\Programming\apps\cryo> .\src\bin\main.exe .\tests\cryo_src\var_tests\1.int.cryo
{lexer} -------------- <Input Source Code> --------------


{lexer} Lexer initialized.
Start: 000001E09FE0DF00
Current: 000001E09FE0DF00

Source:
-------

const exampleNum: int = 34;



{lexer} -------------------- <END> ----------------------


[DEBUG] Lexer initialized

[Parser] Parsing program
[AST] Creating Program Node....
[AST] Creating node: 0
[AST] Initialized node: 0
[AST] Program Node Created
[Lexer] Processing Token | Type: 468389579, Line: 0, Column: 0
[Lexer] Created token: const (Type: 58, Line: 2, Column: 2)
[Parser] Parsing statement...
[Parser] Parsing variable declaration.
[Parser] Entering parseVarDeclaration
[Lexer] Processing Token | Type: 58, Line: 2, Column: 2
[Lexer] Keyword Identified: e
[Lexer] Created token: e (Type: 1, Line: 2, Column: 4)
[Lexer] Created token: exampleNum (Type: 1, Line: 2, Column: 13)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 13
[Lexer] Created token: : (Type: 116, Line: 2, Column: 14)
[Lexer] Processing Token | Type: 116, Line: 2, Column: 14
[Lexer] Keyword Identified: i
[Lexer] Created token: i (Type: 1, Line: 2, Column: 16)
[Lexer] Created token: int (Type: 1, Line: 2, Column: 18)
[Lexer] Processing Token | Type: 1, Line: 2, Column: 18
[Lexer] Created token: = (Type: 6, Line: 2, Column: 20)
[Lexer] Processing Token | Type: 6, Line: 2, Column: 20
[Lexer] Created token: 34 (Type: 18, Line: 2, Column: 23)
[Lexer] Number token: 34
[Parser] Entering parsePrimaryExpression. Current token type: 18
[Lexer] Processing Token | Type: 18, Line: 2, Column: 23
[Lexer] Created token: ; (Type: 130, Line: 2, Column: 24)
[AST] Creating node: 7
[AST] Initialized node: 7
[Parser] Created Literal Node: 34
[Lexer] Created token:  (Type: 0, Line: 3, Column: 1)
[Parser] Created Variable Declaration Node: exampleNum
[Parser] Variable Declaration Node Type: 2

>===------- AST Tree -------===<
Program:
  Variable Declaration: exampleNum
    Literal: 34

>===------- End Tree ------===<
[AST] Freeing program statement: 2
[AST] Freeing Variable Declaration Node
[AST] Freeing node: 2
[AST] Freeing Literal Expression Node
[AST] Freeing node: 7
[AST] Freeing node: 2
[AST] Freeing program statements
[AST] Freeing node: 0
[DEBUG] Program parsed
PS C:\Programming\apps\cryo>