namespace test;

// import std::lib;

extern function printInt(integer: int) -> void;
extern function printStr(str: string) -> void;
extern function strLength(stri: string) -> int;

struct Array {
    data: int[];
    length: int;
}

struct String {
    data: string;
    length: int;
}

public function getStringLength() -> void {
    const testStrLength: int = strLength("strTest");
    printStr("String length:");
    printInt(testStrLength);
    return;
}

public function test(numberIterator: int) -> void {
    const pleasework: int = numberIterator + 1;
    const intArrTwo: int[] = [101, 102, 103, 104, 105, 106, 107, 108, 109, 110];
    //                         0    1    2    3    4    5    6    7    8    9
    const indexArrNew: int = intArrTwo[numberIterator];
    // const foo: int = indexArrNew;

    printStr("----------");
    printStr("Param value: ");
    printInt(numberIterator);

    printStr("Array value: ");
    printInt(indexArrNew);

    printStr("----------");
    printStr(" ");

    if(pleasework < 5) {
        test(pleasework);
    } else {
        return;
    }
    return;
}

public function main() -> void {
    //getStringLength();
    test(0);
    return;
}
