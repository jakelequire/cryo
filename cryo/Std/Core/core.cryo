namespace Std.Core;
@pragma "core"

// core.cryo
//
// This is the core library of Cryo.
// It contains the most basic types and functions.
// It is automatically imported into every module.
// *Do not import it manually.*

// ======================================================== //
//                       Core Types                         //
// ======================================================== //

struct String {
    val: str;
    length: int;
    capacity: int;

    isEmpty: boolean;
    isNull: boolean;

    append(__str__: str) -> String;

    prepend(__str__: str) -> String;

    insert(__str__: str, __index__: int) -> String;

    remove(__index__: int, __length__: int) -> String;
    
    replace(__str__: str, __index__: int, __length__: int) -> String;

    find(__str__: str) -> int;

    findLast(__str__: str) -> int;
    
    findFirst(__str__: str) -> int;
}

implement struct String {
    // The core string properties.
    val: str = "";
    length: int = 0;
    capacity: int = 0;
    isEmpty: boolean = true;
    isNull: boolean = false;
    
    // The core string methods.
    append(__str__: str) -> String {
        // Implementation of append method
    }

    prepend(__str__: str) -> String {
        // Implementation of prepend method
    }

    insert(__str__: str, __index__: int) -> String {
        // Implementation of insert method
    }

    remove(__index__: int, __length__: int) -> String {
        // Implementation of remove method
    }

    replace(__str__: str, __index__: int, __length__: int) -> String {
        // Implementation of replace method
    }

    find(__str__: str) -> int {
        // Implementation of find method
    }

    findLast(__str__: str) -> int {
        // Implementation of findLast method
    }

    findFirst(__str__: str) -> int {
        // Implementation of findFirst method
    }
}

struct Int {
    // The core int properties.
    val: i32;

    // The core int flags.
    isZero: boolean;
    isNegative: boolean;

    // The core int methods.
}

struct Pointer {
    // The core pointer properties.
    val: i64;

    // The core pointer flags.
    addr_string: String;

    // The core pointer methods.
}

type string extends String;     // Type alias for String
type int extends Int;           // Type alias for Int
type pointer extends Pointer;   // Type alias for Pointer

// ---------------------------------------------------------------------------- 
// These are the core types of Cryo.
// The types below are commented out because they are defined in the compiler.
// I only included them for reference.
// ---------------------------------------------------------------------------- 

/// type str        = str;      #[Compiler Defined Type]
/// type char       = char;     #[Compiler Defined Type]
/// type i8         = i8;       #[Compiler Defined Type]
/// type i16        = i16;      #[Compiler Defined Type]
/// type i32        = i32;      #[Compiler Defined Type]
/// type i64        = i64;      #[Compiler Defined Type]
/// type i128       = i128;     #[Compiler Defined Type]
/// type float      = float;    #[Compiler Defined Type]
/// type boolean    = boolean;  #[Compiler Defined Type]
/// type void       = void;     #[Compiler Defined Type]
/// type null       = null;     #[Compiler Defined Type]
/// type any        = any;      #[Compiler Defined Type]


// ======================================================== //
//                    C ABI Functions                       //
// ======================================================== //

extern function mmap    (size: int, flags: int, fd: int, offset: int) -> pointer;
extern function munmap  (_ptr_: pointer, size: int) -> int;
extern function malloc  (size: int) -> pointer;
extern function free    (_ptr_: pointer) -> int;
extern function memcpy  (dest: pointer, src: pointer, size: int) -> pointer;
extern function memmove (dest: pointer, src: pointer, size: int) -> pointer;
extern function memset  (dest: pointer, value: int, size: int) -> pointer;
extern function memcmp  (ptr1: pointer, ptr2: pointer, size: int) -> int;
extern function strlen  (_str_: pointer) -> int;
extern function strnlen (_str_: pointer, maxlen: int) -> int;
extern function strncmp (str1: pointer, str2: pointer, maxlen: int) -> int;
extern function strndup (_str_: pointer, maxlen: int) -> pointer;

// ======================================================== //
//                    Core Functions                        //
// ======================================================== //
