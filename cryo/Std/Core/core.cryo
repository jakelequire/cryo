namespace Std.Core;
@pragma "core"

// core.cryo
//
// This is the core library of Cryo.
// It contains the most basic types and functions.
// It is automatically imported into every module.
// *Do not import it manually.*


// ======================================================== //
//                       Core Types                         //
// ======================================================== //

extern function strlen_export   (__str__: str) -> i32;
extern function strncat_export  (dest: str, src: str, n: i32) -> str;
extern function strnlen_export  (__str__: str, n: i32) -> i32;
extern function strncmp_export  (str1: str, str2: str, n: i32) -> i32;

struct Int {
    // The core Int properties.
    val: i32;

    constructor(__val__: i32) {
        this.val = __val__;
        // this.isZero = (this.val == 0);
        // this.isNegative = (this.val < 0);
    }

    // The core Int methods.
}

struct String {
    val: str;

    constructor(__string__: str) {
        this.val = __string__;
        // this.capacity = this.length + 1; // +1 for null terminator
        // this.isEmpty = (this.length == 0);
        // this.isNull = (this.val == null);
    }

    append(__str__: str) -> String;

    prepend(__str__: str) -> String;

    insert(__str__: str, __index__: i32) -> String;

    remove(__index__: i32, __length__: i32) -> String;
    
    replace(__str__: str, __index__: i32, __length__: i32) -> String;

    find(__str__: str) -> i32;

    findLast(__str__: str) -> i32;
    
    findFirst(__str__: str) -> i32;
}

implement struct String {
    // The core string properties.
    val: str = "";
    length: i32 = 0;

    
    // The core string methods.
    append(__str__: str) -> String {
        // Implementation of append method
    }

    prepend(__str__: str) -> String {
        // Implementation of prepend method
    }

    insert(__str__: str, __index__: i32) -> String {
        // Implementation of insert method
    }

    remove(__index__: i32, __length__: i32) -> String {
        // Implementation of remove method
    }

    replace(__str__: str, __index__: i32, __length__: i32) -> String {
        // Implementation of replace method
    }

    find(__str__: str) -> i32 {
        // Implementation of find method
    }

    findLast(__str__: str) -> i32 {
        // Implementation of findLast method
    }

    findFirst(__str__: str) -> i32 {
        // Implementation of findFirst method
    }
}

// ---------------------------------------------------------------------------- 
// These are the core types of Cryo.
// The types below are commented out because they are defined in the compiler.
// I only included them for reference.
// ---------------------------------------------------------------------------- 

/// type str        = str;      #[Compiler Defined Type]
/// type char       = char;     #[Compiler Defined Type]
/// type i8         = i8;       #[Compiler Defined Type]
/// type i16        = i16;      #[Compiler Defined Type]
/// type i32        = i32;      #[Compiler Defined Type]
/// type i64        = i64;      #[Compiler Defined Type]
/// type i128       = i128;     #[Compiler Defined Type]
/// type float      = float;    #[Compiler Defined Type]
/// type boolean    = boolean;  #[Compiler Defined Type]
/// type void       = void;     #[Compiler Defined Type]
/// type null       = null;     #[Compiler Defined Type]
/// type any        = any;      #[Compiler Defined Type]


// ======================================================== //
//                    C ABI Functions                       //
// ======================================================== //

extern function printf_export       (format: str, ...) -> i32;
extern function scanf_export        (format: str, ...) -> i32;
extern function printI32_export     (value: i32) -> void;

extern function sys_exit    (status: Int) -> void;
extern function sys_read    (fd: Int, buf: void *, count: Int) -> Int;
extern function sys_write   (fd: Int, buf: void *, count: Int) -> Int;

extern function mmap_export     (addr: void *, length: Int, prot: Int, flags: Int, fd: Int, offset: Int) -> void *;
extern function munmap_export   (addr: void *, length: Int) -> Int;
extern function malloc_export   (size: Int) -> void *;
extern function free_export     (__ptr__: void *) -> Int;
extern function memcpy_export   (dest: void *, src: void *, n: Int) -> void *;
extern function memmove_export  (dest: void *, src: void *, n: Int) -> void *;
extern function memcmp_export   (ptr1: void *, ptr2: void *, n: Int) -> Int;
extern function memset_export   (__ptr__: void *, value: Int, num: Int) -> void *;


// ======================================================== //
//                    Core Functions                        //
// ======================================================== //


function printInt (value: Int) -> void {
    printf_export("%d\n", value.val);
    return;
}

function printI32 (value: i32) -> void {
    printf_export("%d\n", value);
    return;
}

function printStr (value: str) -> void {
    printf_export("%s\n", value);
    return;
}

function printChar (value: char) -> void {
    printf_export("%c\n", value);
    return;
}


